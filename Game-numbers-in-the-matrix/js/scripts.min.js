var valueField, //Значение первого поля при клике
	valueFieldSecond, //Значение второго поля при клике
	positionField, //Позиция первого поля при клике
	positionFieldSecond, //Позиция второго поля при клике
	startingGameBoard = [[1, 2, 3, 4, 5, 6, 7, 8, 9], //Стартовое игровое поле
		                 [1, 1, 1, 2, 1, 3, 1, 4, 1],
		                 [5, 1, 6, 1, 7, 1, 8, 1, 9]],
	playingField, //Игровое поле которое обрабатывается
 	strArr, //Игровое поле ввиде строки
	lastRowArr, //Последний ряд массива
	lenLastRow, //Длина последнего ряда
	countRuns = 0, //Количество ходо
	countRemoveNumber = 0; //Количество убраных цифр



$('#btn-start-game').click(function() {

	if ($('#playingField').html() == false) {

		$('#btn-start-game').text('Новая игра');
		playingField = [new Array(...startingGameBoard[0]),new Array(...startingGameBoard[1]),new Array(...startingGameBoard[2])];
		depictField()

	} else {

		$('#playingField').empty();
		playingField = [new Array(...startingGameBoard[0]),new Array(...startingGameBoard[1]),new Array(...startingGameBoard[2])];
        countRemoveNumber = 0;
		countRuns = 0;
		positionField = [0, 0];
		positionFieldSecond = [0, 0];
		infoBlock();
        depictField();
	}
});

function depictField() { //Отрисовка игрового поля

	$('#playingField').append('<div class="textNumberColumn"></div>');

    for (var i = 1; i<= 9; i++) {

        var numberColumn = $('<div/>', {
            class: 'numberColumn',
            text: i
        });

        $('.textNumberColumn').append(numberColumn);
    }

    for (var i = 1; i <= playingField.length; i++) {

		var myRow = $('<div/>', {   // Отрисовка ряда
			    id:     'row' + i,
			    class:  'gaming-row'
			}),
			arrRow = playingField[i - 1];

		$('#playingField').append(myRow);
		$('#row' + i).append('<div class="textNumberRow">' + i + '</div>');

		for (var j = 1; j <= playingField[i - 1].length; j++) {

			var myCol = $('<div/>', {  // Отрисовка полей в ряде
			  		  id:     'row' + i + '_col' + j,
					  class:  'gaming-cage'
				});

			$('#row' + i).append(myCol);
			$('#row' + i + '_col' + j).text(arrRow[j - 1]);

			if ($('#row' + i + '_col' + j).text() == 0) {
					$('#row' + i + '_col' + j).addClass('zero')
			}
		}

        if (/^0{9}$/.test($('#row' + i).text().slice(1))) { //Скрываем пустые ряды при отрисовки, тут проверяем на 9 элементов

            $($('#row' + i)).hide()
        }
	}
}

$('#btn-next-move').click(function() {

    strArr = playingField.join('').replace(/[0,]/g, '');

    if (strArr === '') { //Проверка на победу!

		$('#playingField').empty();
        $('#playingField').append('<div class="win">Поздравляем, вы выйграли!</div>');
        return false
    }

      lastRowArr = playingField[playingField.length - 1];
      lenLastRow = lastRowArr.join('').length;

  if (lastRowArr.length != 9) { //Обработка последенго ряда при добавлении 
       
      lastRowArr = lastRowArr.concat(strArr.slice(0, 9 - lastRowArr.length).split('').map(function (x) {
       		 return parseInt(x)
     	 }));


      strArr = strArr.slice(9 - lenLastRow);
      playingField[playingField.length - 1] = lastRowArr;

 			if (strArr.length % 9 != 0 || strArr.length < 9) { // При == 9, при вызове функции matchPlayField, будет добавляться лишний элемент массива

				playingField =  matchPlayField(playingField)

            } else {

                playingField = playingField.concat(strArr.match(/.{9}/g).map(function (x) {
        	return x.split('').map(function (x) {
          		return parseInt(x)
        			})
      			}));
            }

	if (playingField[playingField.length-1] == '') { // Проверка на баг, когда strArr.length <= 9 и не создаеться новый ряд
		playingField = playingField.slice(0, -1)  //конканиурет пустой массив, целесообразнее проверить чем ещё одну проверку делать
    }

   	$('#playingField').empty();
    depictField();

  } else { //Последний ряд полный == 9

    playingField = matchPlayField(playingField);
   	$('#playingField').empty();
    depictField();
  }
});

function matchPlayField(field) { //Обработчик игрового поля

	if (strArr.length <= 9) {

        return field.concat([strArr.split('').map(function (x) {
            return parseInt(x)
        })])
    }

    if (strArr.length % 9 == 0) {

        return field.concat(strArr.match(/.{9}/g).map(function (x) {
    	    return x.split('').map(function (x) {
          	    return parseInt(x)
      	  })
      }));
    }

    return field.concat(strArr.match(/.{9}/g).map(function (x) {
    	    return x.split('').map(function (x) {
          	    return parseInt(x)
			})
      			})).concat([strArr.slice(-(strArr.length % 9)).split('').map(function (x) {
      	    			return parseInt(x)
        			})])
}

$('#playingField').on('click', '.gaming-cage', function() {
  if (valueField === undefined) {  //Проверка на первый клик 

  	valueField = $(this).text();
	positionField = $(this).attr('id').match(/\d+/g);
	$(this).addClass('active');
	countRuns++

	} else { //Проверка на второй клик 

		valueFieldSecond = $(this).text();
		positionFieldSecond = $(this).attr('id').match(/\d+/g);

		if (checkFields()) { //Проверяем получившееся значения
			
			$('#row'+positionField.join('_col')).removeClass('active').text(0).addClass('zero');
			$(this).text(0).addClass('zero');
			valueField = undefined;
			playingField[positionField[0] - 1][positionField[1] - 1] = 0;
			playingField[positionFieldSecond[0] - 1][positionFieldSecond[1] - 1] = 0;
			countRemoveNumber++;
			infoBlock();

			if (/^0{8}$/.test($(this).siblings().text().slice(1))) { //Скрываем пустые ряды
				$(this).parent().hide()
			}

            if (/^0{8}$/.test($('#row'+positionField.join('_col')).siblings().text().slice(1))) {
                $('#row'+positionField.join('_col')).parent().hide()
            }

		} else {

			$('#row'+positionField.join('_col')).removeClass('active');
			valueField = undefined;
            infoBlock()
		}
	}
});

function checkFields() {
  if (valueField == valueFieldSecond || +valueField + +valueFieldSecond == 10) {

		if (positionField.join('') != positionFieldSecond.join('')) {  //Проверка что по полю не кликнули 2 раза

            var colNum = 1,
			    rowNum = 1;

            if (positionField[0] == positionFieldSecond[0]) {	//Проверка в одном ли ряде

				while (playingField[+positionField[0] - 1][+positionField[1] - 1 + colNum] == 0) { //Проверка от клика вперёд на пустые клетки
					colNum++;
				}

                if (positionField[1] == positionFieldSecond[1] - colNum) {
                    return true;
                }

                colNum = 1;

                while (playingField[+positionField[0] - 1][+positionField[1] - 1 - colNum] == 0) { //Проверка от клика назд на пустые клетки
                    colNum++;
                }


                if (positionField[1] - colNum == positionFieldSecond[1]) {
                    return true;
                }
            }

            if (positionField[1] == positionFieldSecond[1]) {	//Проверка в одной ли колонке

				if (positionField[0] < positionFieldSecond[0]) {

                    while (playingField[+positionField[0] - 1 + rowNum][+positionField[1] - 1] == 0) { //Проверка от клика вниз на пустые клетки
                        rowNum++;
                    }
                }

                if (positionField[0] == positionFieldSecond[0] - rowNum) {
                    return true;
                }

                rowNum = 1;

                if (positionField[0] > positionFieldSecond[0]) {

                    while (playingField[+positionField[0] - 1 - rowNum][+positionField[1] - 1] == 0) { //Проверка от клика вверх на пустые клетки
                        rowNum++;
                    }
                }


                if (positionField[0] - rowNum == positionFieldSecond[0]) {
                    return true;
                }
            }

            /*----- Проверка с одного ряда на другой -----*/

            if ((positionField[1] == 9 || playingField[+positionField[0] - 1][+positionField[1] - 1 + colNum] == 0) //С первого клика на второй
				&& (positionFieldSecond[1] == 1)  || playingField[+positionFieldSecond[0] - 1][+positionFieldSecond[1] - 1 - colNum] == 0){

                while (playingField[+positionField[0] - 1][+positionField[1] - 1 + colNum] == 0) { //Проверка от клика вперёд на пустые клетки
                    colNum++;
                }

                if (colNum > 9 - positionField[1]) {

                	var colNumReverse = 1;

                    while (playingField[+positionFieldSecond[0] - 1][+positionFieldSecond[1] - 1 - colNumReverse] == 0) { //Проверка от клика назад на пустые клетки
                        colNumReverse++;
                    }

                    if (colNumReverse >= 9 - (9 - positionFieldSecond[1])) {
                    	return true
                    }
                }
			}

            if ((positionFieldSecond[1] == 9 || playingField[+positionFieldSecond[0] - 1][+positionFieldSecond[1] - 1 + colNum] == 0) //С второго клика на первый
                && (positionField[1] == 1)  || playingField[+positionField[0] - 1][+positionField[1] - 1 - colNum] == 0){

                while (playingField[+positionFieldSecond[0] - 1][+positionFieldSecond[1] - 1 + colNum] == 0) { //Проверка от клика вперёд на пустые клетки
                    colNum++;
                }

                if (colNum > 9 - positionFieldSecond[1]) {

                    var colNumReverse = 1;

                    while (playingField[+positionField[0] - 1][+positionField[1] - 1 - colNumReverse] == 0) { //Проверка от клика назад на пустые клетки
                        colNumReverse++;
                    }

                    if (colNumReverse >= 9 - (9 - positionField[1])) {
                        return true
                    }
                }
            }
		}
	}
}

/*------------ Инфоблок и т.д. ------------*/
function infoBlock() {
	$('#infoGame > .countElements > p').text(countRemoveNumber);
	$('#infoGame > .countRun > p').text(countRuns);
	$('#infoGame > .firstClick > p').text('ряд ' + positionField[0] + ' колонка ' + positionField[1]);
	$('#infoGame > .secondClick > p').text('ряд ' + positionFieldSecond[0] + ' колонка ' + positionFieldSecond[1]);
}